@startuml
skinparam dpi 200
skinparam backgroundColor transparent

title Call forecasting script when synchronization is not running

actor PSImarket
boundary Gateway
control TimeSeriesScriptsExecutioner as Executioner
control ScriptsSynchronizer as Synchronizer
boundary TimeSeriesRepository as TSRepo
boundary REngine as Engine
database ModelsRepository as Models

autonumber
PSImarket -> Gateway: execute(CalculationDefinition)
activate PSImarket
activate Gateway
Gateway -\ Executioner: call
deactivate Gateway
activate Executioner
Executioner -> Synchronizer: isUnderSynchronization?
activate Synchronizer
Synchronizer -> Executioner: {false}
deactivate Synchronizer
||||
Executioner -> TSRepo: read( In TimeSeries Ids)
activate TSRepo
TSRepo -> Executioner: {TSDataIn}
deactivate TSRepo
||||
Executioner -\ Engine: call(CalculationDefinition, TSDataIn})
activate Engine
Engine -> Models: getModels( CalculationDefinition )
Models -> Engine: model
Engine -> Engine: 
Engine -\ Executioner: {TSDataOut}
deactivate Engine
||||
Executioner -> TSRepo: save(OutTSIds, TSDataOut)
activate TSRepo
TSRepo -> Executioner
deactivate TSRepo
Executioner -> Gateway: {calculationResult}
deactivate Executioner
activate Gateway
Gateway -> PSImarket: calculationDone
deactivate Gateway
deactivate PSImarket

@enduml